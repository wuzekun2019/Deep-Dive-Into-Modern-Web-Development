{"ast":null,"code":"var _jsxFileName = \"/Users/zekunwu/Desktop/Deep-Dive-Into-Modern-Web-Development/part2/data_for_countries/src/components/Countries.js\";\nimport react from \"react\";\nimport Country from \"./Country\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = ({\n  countries,\n  search\n}) => {\n  console.log(countries);\n  console.log(search);\n\n  if (search.length === 0) {\n    return countries.map((country, i) => {\n      return /*#__PURE__*/_jsxDEV(Country, {\n        props: country\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 52\n      }, this);\n    });\n  } else if (search.length === 1) {\n    window.alert(\"Too many matches,specifiy another filter\");\n    return '';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }, this);\n};\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["/Users/zekunwu/Desktop/Deep-Dive-Into-Modern-Web-Development/part2/data_for_countries/src/components/Countries.js"],"names":["react","Country","Countries","countries","search","console","log","length","map","country","i","window","alert"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAWC,EAAAA;AAAX,CAAD,KAAsB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,MAAIA,MAAM,CAACG,MAAP,KAAgB,CAApB,EAAsB;AAClB,WAAQJ,SAAS,CAACK,GAAV,CAAc,CAACC,OAAD,EAASC,CAAT,KAAa;AAAC,0BAAO,QAAC,OAAD;AAAS,QAAA,KAAK,EAAED;AAAhB,SAA8BC,CAA9B;AAAA;AAAA;AAAA;AAAA,cAAP;AAA0C,KAAtE,CAAR;AACH,GAFD,MAGK,IAAIN,MAAM,CAACG,MAAP,KAAgB,CAApB,EAAsB;AACvBI,IAAAA,MAAM,CAACC,KAAP,CAAa,0CAAb;AACA,WAAQ,EAAR;AACH;;AACD,sBAAQ;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CAXD;;KAAMV,S;AAaN,eAAeA,SAAf","sourcesContent":["import react from \"react\"\nimport Country from \"./Country\"\n\nconst Countries = ({countries,search})=>{\n    console.log(countries)\n    console.log(search)\n    if (search.length===0){\n        return (countries.map((country,i)=>{return <Country props={country} key={i}/>}))\n    }\n    else if (search.length===1){\n        window.alert(\"Too many matches,specifiy another filter\")\n        return ('')\n    }\n    return (<p></p>)\n}\n\nexport default Countries;"]},"metadata":{},"sourceType":"module"}